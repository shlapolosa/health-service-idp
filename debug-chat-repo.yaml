apiVersion: batch/v1
kind: Job
metadata:
  name: debug-chat-repo-creator
  namespace: default
spec:
  backoffLimit: 1
  template:
    spec:
      serviceAccountName: crossplane-github-provider
      restartPolicy: Never
      containers:
      - name: debug-chat-repo-creator
        image: alpine:3.18
        command:
        - /bin/sh
        - -c
        - |
          set -e
          echo "=== STARTING DEBUG CHAT REPO CREATOR ==="
          
          # Install git and curl
          echo "Installing git and curl..."
          apk add --no-cache git curl
          echo "✅ git and curl installed"
          
          # Check environment variables
          echo "=== ENVIRONMENT VARIABLES ==="
          echo "SERVICE_NAME: $SERVICE_NAME"
          echo "GITHUB_USER: $GITHUB_USER"
          echo "GITHUB_TOKEN: ${GITHUB_TOKEN:0:10}..."
          
          # Test GitHub API access
          echo "=== TESTING GITHUB API ACCESS ==="
          curl -H "Authorization: token $GITHUB_TOKEN" https://api.github.com/user || {
            echo "❌ GitHub API access failed"
            exit 1
          }
          echo "✅ GitHub API access working"
          
          # Clone chat-template
          echo "=== CLONING CHAT TEMPLATE ==="
          TEMP_DIR="/tmp/chat-repo-$SERVICE_NAME"
          mkdir -p $TEMP_DIR
          cd $TEMP_DIR
          
          git clone https://$GITHUB_TOKEN@github.com/$GITHUB_USER/chat-template.git . || {
            echo "❌ Failed to clone chat-template"
            exit 1
          }
          echo "✅ Successfully cloned chat-template"
          
          # Check if repository already exists
          echo "=== CHECKING IF REPOSITORY EXISTS ==="
          REPO_EXISTS=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
            https://api.github.com/repos/$GITHUB_USER/$SERVICE_NAME | jq -r '.name // "null"')
          
          if [ "$REPO_EXISTS" != "null" ]; then
            echo "⚠️  Repository $SERVICE_NAME already exists - deleting it first"
            curl -X DELETE \
              -H "Authorization: token $GITHUB_TOKEN" \
              https://api.github.com/repos/$GITHUB_USER/$SERVICE_NAME || {
              echo "❌ Failed to delete existing repository"
              exit 1
            }
            echo "✅ Deleted existing repository"
            sleep 2
          fi
          
          echo "=== SUCCESS - All steps completed ==="
        env:
        - name: SERVICE_NAME
          value: "debug-rasa-test"
        - name: GITHUB_TOKEN
          valueFrom:
            secretKeyRef:
              name: github-credentials
              key: token
        - name: GITHUB_USER
          valueFrom:
            secretKeyRef:
              name: github-credentials
              key: user