---
# Simple test application to verify GraphQL federation
apiVersion: core.oam.dev/v1beta1
kind: Application
metadata:
  name: test-graphql-federation
  namespace: default
spec:
  components:
  # GraphQL Gateway
  - name: test-gateway
    type: graphql-gateway
    properties:
      gatewayImage: "docker.io/socrates12345/graphql-mesh-gateway:openapi-fix"
      autoSchema: true
      schemaRefreshInterval: "30s"
      exposePlayground: true
      resources:
        cpu: "500m"
        memory: "512Mi"
      environment:
        LOG_LEVEL: "debug"
        NODE_ENV: "development"
  
  # Service 1 - WITH federation
  - name: user-api
    type: webservice
    properties:
      image: "kennethreitz/httpbin:latest"
      port: 80
      # Enable GraphQL federation
      enableGraphQLFederation: true
      openApiPath: "/spec.json"
      apiVersion: "v1"
      resources:
        cpu: "100m"
        memory: "128Mi"
      environment:
        SERVICE_NAME: "user-api"
  
  # Service 2 - WITH federation  
  - name: product-api
    type: webservice
    properties:
      image: "kennethreitz/httpbin:latest"
      port: 80
      # Enable GraphQL federation
      enableGraphQLFederation: true
      openApiPath: "/spec.json"  
      apiVersion: "v1"
      resources:
        cpu: "100m"
        memory: "128Mi"
      environment:
        SERVICE_NAME: "product-api"
  
  # Service 3 - WITHOUT federation (should be excluded)
  - name: internal-service
    type: webservice
    properties:
      image: "kennethreitz/httpbin:latest"
      port: 80
      # NO federation annotation - should not appear in GraphQL
      resources:
        cpu: "100m"
        memory: "128Mi"
      environment:
        SERVICE_NAME: "internal-service"