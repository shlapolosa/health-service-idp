apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  name: slack-api-server
  namespace: default
  labels:
    app: slack-api-server
    service-type: api-server
    component: slack-integration
spec:
  template:
    metadata:
      annotations:
        autoscaling.knative.dev/minScale: "1"
        autoscaling.knative.dev/maxScale: "5"
        autoscaling.knative.dev/target: "10"
        autoscaling.knative.dev/scaleDownDelay: "30s"
        autoscaling.knative.dev/scaleToZeroGracePeriod: "60s"
      labels:
        app: slack-api-server
        service-type: api-server
        component: slack-integration
    spec:
      serviceAccountName: slack-api-server
      # Image pull secrets for ACR
      imagePullSecrets:
      - name: acr-credentials
      
      volumes:
      - name: argo-token
        secret:
          secretName: argo-token
          
      containers:
      - name: slack-api-server
        # Using v1.2.0 AMD64 build with all Pattern fixes
        image: healthidpuaeacr.azurecr.io/slack-api-server:v1.2.0
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          protocol: TCP
        env:
        - name: LOG_LEVEL
          value: "INFO"
        - name: ENVIRONMENT
          value: "production"
        - name: GITHUB_REPOSITORY
          value: "shlapolosa/health-service-idp"
        # Registry type from ConfigMap
        - name: REGISTRY_TYPE
          valueFrom:
            configMapKeyRef:
              name: registry-config
              key: ACTIVE_REGISTRY
              optional: true
        - name: ARGO_TOKEN_FILE
          value: "/var/run/secrets/argo/token"
        volumeMounts:
        - name: argo-token
          mountPath: /var/run/secrets/argo
          readOnly: true
        resources:
          limits:
            cpu: "1"
            memory: "512Mi"
          requests:
            cpu: "250m"
            memory: "256Mi"
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 5
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          runAsNonRoot: true
          runAsUser: 1000
          capabilities:
            drop:
            - ALL