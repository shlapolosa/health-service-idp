# Automated Secret Synchronization Job
# Runs whenever secrets are updated in default namespace

apiVersion: batch/v1
kind: CronJob
metadata:
  name: sync-lenses-credentials
  namespace: default
spec:
  schedule: "*/5 * * * *"  # Every 5 minutes
  concurrencyPolicy: Replace
  jobTemplate:
    spec:
      template:
        spec:
          serviceAccountName: secret-copier
          containers:
          - name: sync-secret
            image: bitnami/kubectl:latest
            command:
            - sh
            - -c
            - |
              # Get list of all realtime namespaces
              NAMESPACES=$(kubectl get ns -l app.kubernetes.io/part-of=realtime-platform -o name | sed 's/namespace\///')
              
              for ns in $NAMESPACES; do
                echo "Syncing secret to namespace: $ns"
                
                # Check if secret exists and get its version
                DEFAULT_VERSION=$(kubectl get secret lenses-credentials -n default -o jsonpath='{.metadata.resourceVersion}' 2>/dev/null || echo "")
                TARGET_VERSION=$(kubectl get secret lenses-credentials -n $ns -o jsonpath='{.metadata.resourceVersion}' 2>/dev/null || echo "")
                
                # Only sync if versions differ or target doesn't exist
                if [ "$DEFAULT_VERSION" != "$TARGET_VERSION" ]; then
                  echo "Versions differ, syncing..."
                  kubectl get secret lenses-credentials -n default -o yaml | \
                    sed "s/namespace: default/namespace: $ns/" | \
                    sed '/resourceVersion:/d' | \
                    sed '/uid:/d' | \
                    sed '/creationTimestamp:/d' | \
                    kubectl apply -f -
                  echo "Secret synced to $ns"
                else
                  echo "Secret already up to date in $ns"
                fi
              done
          restartPolicy: OnFailure