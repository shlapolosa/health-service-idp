spring.application.name=identity-service
management.tracing.sampling.probability=1.0
management.zipkin.tracing.endpoint=http://zipkin.istio-system:9411/api/v2/spans 

 # OpenTelemetry minimum config                                                                                                                                             
 otel.exporter.otlp.endpoint=http://otel-collector.istio-system:4317                                                                                                        
 otel.resource.attributes=service.name=${spring.application.name}                                                                                                           
                                                                                                                                                                            
 # Required for correlation IDs in logs                                                                                                                                     
 logging.pattern.level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]                                                                                         
                                                                                                                                                                            
 # Health probes for Kubernetes/Istio                                                                                                                                       
 management.endpoint.health.probes.enabled=true                                                                                                                             
 management.health.livenessState.enabled=true                                                                                                                               
 management.health.readinessState.enabled=true                                                                                                                              
                                                                                                                                                                            
 # Metrics histogram buckets aligned with Istio defaults                                                                                                                    
 management.metrics.distribution.percentiles-histogram.http.server.requests=true                                                                                            
 management.metrics.distribution.slo.http.server.requests=50ms,100ms,200ms,500ms,1s,2s,3s

# Async Configuration
spring.task.execution.pool.core-size=2
spring.task.execution.pool.max-size=5
spring.task.execution.pool.queue-capacity=100
spring.task.execution.thread-name-prefix=AsyncThread-

# Liquibase Configuration
spring.liquibase.change-log=classpath:db/changelog/db.changelog-master.yaml
spring.liquibase.enabled=true
# spring.liquibase.drop-first=true 

# SpringDoc OpenAPI Configuration
springdoc.api-docs.path=/v3/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.enabled=true
springdoc.swagger-ui.operationsSorter=alpha
springdoc.swagger-ui.tagsSorter=alpha

# springdoc.packages-to-scan=com.heath.health_app

# Error Configuration
server.error.include-message=always
server.error.include-binding-errors=always
server.error.include-stacktrace=never

# Database Configuration
spring.datasource.url=${DB_URL:jdbc:postgresql://ep-proud-snow-a55l1fw5.us-east-2.aws.neon.tech/igludb?sslmode=require&currentSchema=atomic}
spring.datasource.username=${DB_USERNAME:sp_user}
spring.datasource.password=${DB_PASSWORD:dcKjguD92WeY}
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA Configuration
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# Database Connection Pool Configuration
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.max-lifetime=12800000                                                                                                                               
# spring.datasource.hikari.validation-timeout=3000

# Redis Configuration
spring.data.redis.host=${REDIS_HOST:redis-server}
spring.data.redis.port=${REDIS_PORT:6379}
spring.data.redis.password=${REDIS_PASSWORD:eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81}
# spring.data.redis.password=${REDIS_PASSWORD:}
spring.data.redis.timeout=2000
spring.data.redis.database=0

# Auth0 Configuration
auth0.domain=${AUTH0_DOMAIN:dev-4b4dzb0l6msa6iuh.uk.auth0.com}
auth0.clientId=${AUTH0_CLIENT_ID:v06SvrS8MEmgZN6AVZbWQjRps0clUn0W}
auth0.clientSecret=${AUTH0_CLIENT_SECRET:uekKsmkqwRapHnH5DWY3g_R05ZWkcRSXk6CwZXhpWfrAkG2KSpozCIRIDnV_n1F6}
auth0.audience=${AUTH0_AUDIENCE:https://heathhealth-apim-service.azure-api.net/}


# spring.fhir.properties.server.url=https://api.socrateshlapolosa.org/fhir
spring.fhir.properties.server.url=http://fhir-server:8080/fhir
# spring.fhir.properties.server.url=http://localhost:8090/fhir
# Kafka Configuration
spring.kafka.bootstrap-servers=pkc-12576z.us-west2.gcp.confluent.cloud:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.trusted.packages=com.health.health_app.identity.domain.events
spring.kafka.topic.auth-events=auth-events

# Kafka Security Configuration
spring.kafka.security.protocol=SASL_SSL
spring.kafka.properties.sasl.mechanism=PLAIN
spring.kafka.properties.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username="UJXR2AHHSOHL2O4K" password="L4piWdT0pE4t+LiP5xLrkfWxmhePL8jdk0LaSX2N5cSevSBF1EHjr2oygqJX64FC";
spring.kafka.properties.ssl.endpoint.identification.algorithm=https
spring.kafka.properties.client.dns.lookup=use_all_dns_ips

# Kafka Producer Configuration
spring.kafka.producer.acks=all
spring.kafka.producer.retries=3
spring.kafka.producer.batch-size=16384
spring.kafka.producer.buffer-memory=33554432
spring.kafka.producer.properties.enable.idempotence=true
spring.kafka.producer.properties.max.in.flight.requests.per.connection=5

# Kafka Consumer Configuration
spring.kafka.consumer.group-id=heath-health
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=com.health.health_app.identity.domain.events

# Logging Configuration
logging.level.com.health.health_app=TRACE
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n
logging.level.org.springframework.transaction=TRACE
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql=TRACE

# # Debug Configuration
debug=true
# trace=true
# logging.level.root=INFO
# logging.level.org.springframework.web=TRACE
# logging.level.org.springdoc=INFO
# logging.level.org.springframework.security=TRACE

# Actuator and Prometheus Configuration
management.endpoints.web.exposure.include=health,info,prometheus,metrics
management.endpoint.health.show-details=always
management.endpoint.prometheus.enabled=true
management.metrics.tags.application=${spring.application.name}
management.metrics.export.prometheus.enabled=true
management.metrics.distribution.percentiles-histogram.[http.server.requests]=true
management.metrics.distribution.slo.[http.server.requests]=50ms,100ms,200ms
management.metrics.distribution.percentiles.[http.server.requests]=0.5,0.9,0.95,0.99

 springdoc.show-actuator=true                                                                                                                                               
#  springdoc.use-management-port=true                                                                                                                                        
 springdoc.writer-with-default-pretty-printer=true
