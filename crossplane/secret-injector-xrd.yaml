---
# SecretInjector XRD - Defines the schema for cross-component secret discovery and injection
apiVersion: apiextensions.crossplane.io/v1
kind: CompositeResourceDefinition
metadata:
  name: xsecretinjectors.platform.example.org
spec:
  group: platform.example.org
  names:
    kind: XSecretInjector
    plural: xsecretinjectors
  claimNames:
    kind: SecretInjectorClaim
    plural: secretinjectors
  versions:
  - name: v1alpha1
    served: true
    referenceable: true
    schema:
      openAPIV3Schema:
        type: object
        properties:
          spec:
            type: object
            description: "SecretInjector specification for cross-component secret discovery and injection"
            properties:
              webserviceName:
                type: string
                description: "Name of the webservice that needs secret injection"
              realtimePlatformName:
                type: string
                description: "Name of the realtime platform to discover secrets from"
              namespace:
                type: string
                description: "Kubernetes namespace where both components are deployed"
                default: "default"
              forceReinjection:
                type: boolean
                description: "Force re-injection of secrets even if already injected"
                default: false
              validationMode:
                type: string
                description: "Validation mode for secret injection"
                enum: ["strict", "permissive", "skip"]
                default: "permissive"
              requiredServices:
                type: array
                description: "List of required services that must have secrets available"
                items:
                  type: string
                  enum: ["kafka", "mqtt", "db", "metabase", "lenses"]
                default: ["db"]
              injectionStrategy:
                type: string
                description: "Strategy for secret injection"
                enum: ["immediate", "on-demand", "scheduled"]
                default: "immediate"
            required:
            - webserviceName
            - realtimePlatformName
          status:
            type: object
            description: "SecretInjector status"
            properties:
              injectionStatus:
                type: string
                description: "Current status of secret injection"
                enum: ["pending", "discovering", "injecting", "completed", "failed"]
              discoveredSecrets:
                type: array
                description: "List of discovered secrets"
                items:
                  type: object
                  properties:
                    name:
                      type: string
                      description: "Secret name"
                    serviceType:
                      type: string
                      description: "Type of service (kafka, mqtt, db, etc.)"
                    available:
                      type: boolean
                      description: "Whether the secret is available"
              secretCount:
                type: integer
                description: "Number of secrets discovered and injected"
              integrationSecret:
                type: string
                description: "Name of the integration secret created"
              lastInjectionTime:
                type: string
                format: date-time
                description: "Timestamp of last successful injection"
              validationResults:
                type: object
                description: "Results of secret validation"
                properties:
                  status:
                    type: string
                    enum: ["ready", "partial", "failed"]
                  missingServices:
                    type: array
                    items:
                      type: string
                  availableServices:
                    type: array
                    items:
                      type: string
                  recommendations:
                    type: array
                    items:
                      type: string
              errorMessage:
                type: string
                description: "Error message if injection failed"
    additionalPrinterColumns:
    - name: Webservice
      type: string
      jsonPath: .spec.webserviceName
    - name: Platform
      type: string
      jsonPath: .spec.realtimePlatformName
    - name: Status
      type: string
      jsonPath: .status.injectionStatus
    - name: Secrets
      type: integer
      jsonPath: .status.secretCount
    - name: Age
      type: date
      jsonPath: .metadata.creationTimestamp