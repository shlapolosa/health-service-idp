# Example ApplicationClaims for Different VCluster Configurations

---
# ApplicationClaim for VCluster with Knative Serving
# This will create Knative Services for serverless scaling
apiVersion: platform.example.org/v1alpha1
kind: ApplicationClaim
metadata:
  name: user-service-serverless
  namespace: default
spec:
  appContainer: health-service-idp
  name: user-service-serverless
  language: python
  framework: fastapi
  database: postgres
  cache: redis
  exposeApi: false  # Internal only for cost optimization
  
---
# ApplicationClaim for VCluster without Knative
# This will create regular Kubernetes Deployments  
apiVersion: platform.example.org/v1alpha1
kind: ApplicationClaim
metadata:
  name: auth-service-traditional
  namespace: default
spec:
  appContainer: health-service-idp
  name: auth-service-traditional
  language: python
  framework: fastapi
  database: postgres
  cache: none
  exposeApi: true

---
# High-traffic service optimized for Knative
apiVersion: platform.example.org/v1alpha1
kind: ApplicationClaim
metadata:
  name: api-gateway-service
  namespace: default
  annotations:
    # Override default scaling for high-traffic service
    knative.serving.dev/min-scale: "2"
    knative.serving.dev/max-scale: "20"
    knative.serving.dev/target: "100"
spec:
  appContainer: health-service-idp
  name: api-gateway-service
  language: python
  framework: fastapi
  database: none
  cache: redis
  exposeApi: true

---
# Background service optimized for cost (aggressive scale-to-zero)
apiVersion: platform.example.org/v1alpha1
kind: ApplicationClaim
metadata:
  name: background-processor
  namespace: default
  annotations:
    # Aggressive scale-to-zero for background jobs
    knative.serving.dev/min-scale: "0"
    knative.serving.dev/max-scale: "3"
    knative.serving.dev/scale-to-zero-pod-retention-period: "10s"
spec:
  appContainer: health-service-idp
  name: background-processor
  language: python
  framework: fastapi
  database: postgres
  cache: none
  exposeApi: false

---
# Java SpringBoot service with Knative
apiVersion: platform.example.org/v1alpha1
kind: ApplicationClaim
metadata:
  name: payment-service-java
  namespace: default
  annotations:
    # Java services typically need more warmup time
    knative.serving.dev/min-scale: "1"
    knative.serving.dev/scale-to-zero-pod-retention-period: "2m"
spec:
  appContainer: health-service-idp
  name: payment-service-java
  language: java
  framework: springboot
  database: postgres
  cache: redis
  exposeApi: true