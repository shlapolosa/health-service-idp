# Example EnvironmentConfig for VPC subnet configuration
# This would be deployed by platform administrators for each environment

apiVersion: apiextensions.crossplane.io/v1alpha1
kind: EnvironmentConfig
metadata:
  name: production-vpc-config
  labels:
    environment: production
    region: us-east-1
data:
  # VPC configuration for production environment
  vpc:
    id: vpc-12345abcde67890
    privateSubnetIds:
    - subnet-abcdef1234567890  # us-east-1a private
    - subnet-567890abcdef123   # us-east-1b private
    - subnet-123456789abcdef   # us-east-1c private
    publicSubnetIds:
    - subnet-public1a
    - subnet-public1b
    - subnet-public1c
    securityGroups:
      apiGateway: sg-1234567890abcdef0
      loadBalancer: sg-abcdef1234567890
  
  # EKS cluster information
  eks:
    clusterName: production-cluster
    version: "1.28"
    
  # AWS provider configuration  
  aws:
    region: us-east-1
    accountId: "123456789012"

---
apiVersion: apiextensions.crossplane.io/v1alpha1
kind: EnvironmentConfig
metadata:
  name: development-vpc-config
  labels:
    environment: development
    region: us-west-2
data:
  # VPC configuration for development environment
  vpc:
    id: vpc-dev12345abcde67890
    privateSubnetIds:
    - subnet-dev-private-1a
    - subnet-dev-private-1b
    publicSubnetIds:
    - subnet-dev-public-1a
    - subnet-dev-public-1b
    securityGroups:
      apiGateway: sg-dev-1234567890
      
  # EKS cluster information
  eks:
    clusterName: development-cluster
    version: "1.28"
    
  # AWS provider configuration  
  aws:
    region: us-west-2
    accountId: "123456789012"

---
# Default configuration for local/testing environments
apiVersion: apiextensions.crossplane.io/v1alpha1
kind: EnvironmentConfig
metadata:
  name: default-vpc-config
  labels:
    environment: default
data:
  vpc:
    # These should be replaced with actual subnet IDs from your default VPC
    privateSubnetIds:
    - subnet-replace-with-actual-private-subnet-1
    - subnet-replace-with-actual-private-subnet-2
    # Note: API Gateway VPC Link requires at least 2 subnets in different AZs
  
  instructions: |
    To configure VPC subnets for API Gateway integration:
    
    1. Find your VPC ID:
       aws ec2 describe-vpcs --filters "Name=is-default,Values=true"
    
    2. Find private subnets in that VPC:
       aws ec2 describe-subnets --filters "Name=vpc-id,Values=vpc-YOUR_VPC_ID"
    
    3. Update this EnvironmentConfig with actual subnet IDs
    
    4. Ensure subnets are in different availability zones
    
    5. Verify subnets have route to NAT Gateway (for private subnets)
       or Internet Gateway (for public subnets - less secure)