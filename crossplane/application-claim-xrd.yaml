apiVersion: apiextensions.crossplane.io/v1
kind: CompositeResourceDefinition
metadata:
  name: xapplicationclaims.platform.example.org
spec:
  group: platform.example.org
  names:
    kind: XApplicationClaim
    plural: xapplicationclaims
  claimNames:
    kind: ApplicationClaim
    plural: applicationclaims
  versions:
  - name: v1alpha1
    served: true
    referenceable: true
    schema:
      openAPIV3Schema:
        type: object
        properties:
          spec:
            type: object
            description: ApplicationClaim specification
            properties:
              appContainer:
                type: string
                description: Name of the AppContainer this microservice belongs to
                pattern: '^[a-z0-9]([-a-z0-9]*[a-z0-9])?$'
                maxLength: 63
                default: "health-service-idp"
              name:
                type: string
                description: Name of the microservice (must be DNS-1123 compliant)
                pattern: '^[a-z0-9]([-a-z0-9]*[a-z0-9])?$'
                maxLength: 63
              language:
                type: string
                description: Programming language for the application
                enum: [python, java, rasa]
              framework:
                type: string
                description: Application framework to use
                enum: [fastapi, springboot, chatbot]
              hasFrontend:
                type: boolean
                description: Whether the application includes a frontend component
                default: false
              database:
                type: string
                description: Database type to provision for the application
                enum: [postgres, none]
                default: none
              cache:
                type: string
                description: Cache type to provision for the application
                enum: [redis, none]
                default: none
              exposeApi:
                type: boolean
                description: Whether to expose the API via AWS API Gateway
                default: false
              realtime:
                type: string
                description: References a realtime-platform component name for automatic integration
                pattern: '^[a-z0-9]([-a-z0-9]*[a-z0-9])?$'
                maxLength: 63
              websocket:
                type: boolean
                description: Whether to enable WebSocket endpoints for real-time communication
                default: false
              streaming:
                type: object
                description: Kafka streaming configuration for real-time data processing
                properties:
                  enabled:
                    type: boolean
                    description: Enable Kafka streaming capabilities
                    default: false
                  topics:
                    type: array
                    description: Kafka topics to create and subscribe to
                    items:
                      type: string
                      pattern: '^[a-zA-Z0-9._-]+$'
                      maxLength: 249
                  consumerGroup:
                    type: string
                    description: Kafka consumer group ID
                    pattern: '^[a-zA-Z0-9._-]+$'
                    maxLength: 255
                  autoOffsetReset:
                    type: string
                    description: Kafka consumer auto offset reset strategy
                    enum: [earliest, latest, none]
                    default: latest
              chatbot:
                type: object
                description: Chatbot-specific configuration for Rasa-based chat services
                properties:
                  type:
                    type: string
                    description: Type of chatbot framework
                    enum: [rasa]
                    default: rasa
                  rasaImage:
                    type: string
                    description: Docker image for Rasa server
                    pattern: '^[a-z0-9]+([\.\-]?[a-z0-9]+)*\/[a-z0-9]+([\._\-]?[a-z0-9]+)*:[a-zA-Z0-9_\.\-]+$'
                  actionsImage:
                    type: string
                    description: Docker image for Rasa actions server
                    pattern: '^[a-z0-9]+([\.\-]?[a-z0-9]+)*\/[a-z0-9]+([\._\-]?[a-z0-9]+)*:[a-zA-Z0-9_\.\-]+$'
                  channels:
                    type: array
                    description: Messaging channels to enable
                    items:
                      type: string
                      enum: [rest, socketio, twilio, telegram, facebook, slack]
                    default: [rest]
                  enableActions:
                    type: boolean
                    description: Whether to deploy custom actions server
                    default: true
                  minScale:
                    type: integer
                    description: Minimum number of Rasa server replicas
                    minimum: 0
                    default: 1
                  maxScale:
                    type: integer
                    description: Maximum number of Rasa server replicas
                    minimum: 1
                    default: 10
                  actionsMinScale:
                    type: integer
                    description: Minimum number of actions server replicas
                    minimum: 0
                    default: 0
                  actionsMaxScale:
                    type: integer
                    description: Maximum number of actions server replicas
                    minimum: 1
                    default: 5
            required:
            - name
            - language
            - framework
          status:
            type: object
            description: ApplicationClaim status
            properties:
              ready:
                type: boolean
                description: Indicates whether the application is ready and deployed
              repository:
                type: object
                description: GitHub repository information
                properties:
                  url:
                    type: string
                    description: GitHub repository URL
                  branch:
                    type: string
                    description: Default branch name
                  cloneUrl:
                    type: string
                    description: Git clone URL
              application:
                type: object
                description: Deployed application information
                properties:
                  knativeService:
                    type: string
                    description: Knative service name
                  endpoint:
                    type: string
                    description: Application endpoint URL
                  apiGatewayEndpoint:
                    type: string
                    description: AWS API Gateway endpoint if exposeApi is true
              infrastructure:
                type: object
                description: Provisioned infrastructure information
                properties:
                  database:
                    type: object
                    properties:
                      endpoint:
                        type: string
                        description: Database connection endpoint
                      credentials:
                        type: string
                        description: Secret name containing database credentials
                  cache:
                    type: object
                    properties:
                      endpoint:
                        type: string
                        description: Cache connection endpoint
                      credentials:
                        type: string
                        description: Secret name containing cache credentials
                  realtime:
                    type: object
                    description: Real-time platform connection information
                    properties:
                      platformName:
                        type: string
                        description: Name of the connected realtime-platform component
                      mqttEndpoint:
                        type: string
                        description: MQTT broker endpoint
                      kafkaEndpoint:
                        type: string
                        description: Kafka cluster endpoint
                      schemaRegistryEndpoint:
                        type: string
                        description: Schema registry endpoint
                      analyticsEndpoint:
                        type: string
                        description: Analytics dashboard endpoint (Metabase)
                      streamingEndpoint:
                        type: string
                        description: Stream processing UI endpoint (Lenses)
                      websocketEndpoint:
                        type: string
                        description: WebSocket endpoint if websocket is enabled
                      credentials:
                        type: object
                        description: Secrets containing connection credentials
                        properties:
                          mqtt:
                            type: string
                            description: Secret name for MQTT credentials
                          kafka:
                            type: string
                            description: Secret name for Kafka credentials
                          database:
                            type: string
                            description: Secret name for database credentials
                          analytics:
                            type: string
                            description: Secret name for analytics credentials
                          streaming:
                            type: string
                            description: Secret name for streaming platform credentials
                  chatbot:
                    type: object
                    description: Chatbot deployment information
                    properties:
                      rasaServerEndpoint:
                        type: string
                        description: Rasa server REST API endpoint
                      actionsServerEndpoint:
                        type: string
                        description: Actions server webhook endpoint
                      webhookEndpoint:
                        type: string
                        description: Chat webhook endpoint for external integrations
                      channels:
                        type: array
                        description: Enabled messaging channels
                        items:
                          type: string
                      modelVersion:
                        type: string
                        description: Currently deployed Rasa model version
                      trainingStatus:
                        type: string
                        description: Model training status
                        enum: [trained, training, failed, unknown]
                      healthStatus:
                        type: object
                        description: Health status of chatbot components
                        properties:
                          rasaServer:
                            type: string
                            enum: [healthy, unhealthy, unknown]
                          actionsServer:
                            type: string
                            enum: [healthy, unhealthy, unknown]
              cicd:
                type: object
                description: CI/CD pipeline information
                properties:
                  dockerImage:
                    type: string
                    description: Docker image repository and tag
                  lastBuild:
                    type: string
                    description: Last successful build timestamp
                  pipelineStatus:
                    type: string
                    description: Current pipeline status
              conditions:
                type: array
                description: Detailed status conditions
                items:
                  type: object
                  properties:
                    type:
                      type: string
                    status:
                      type: string
                    lastTransitionTime:
                      type: string
                      format: date-time
                    reason:
                      type: string
                    message:
                      type: string