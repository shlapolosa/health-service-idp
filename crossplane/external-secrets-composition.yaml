apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: external-secrets-composition
  labels:
    crossplane.io/xrd: xexternalsecrets.platform.example.com
    provider: kubernetes
spec:
  writeConnectionSecretsToNamespace: crossplane-system
  compositeTypeRef:
    apiVersion: platform.example.com/v1alpha1
    kind: XExternalSecrets
  resources:
  - name: auth0-externalsecret
    base:
      apiVersion: kubernetes.crossplane.io/v1alpha1
      kind: Object
      spec:
        forProvider:
          manifest:
            apiVersion: external-secrets.io/v1beta1
            kind: ExternalSecret
            metadata:
              name: auth0-credentials
            spec:
              refreshInterval: 1h
              secretStoreRef:
                kind: ClusterSecretStore
                name: aws-secretsmanager
              target:
                name: auth0-credentials
                creationPolicy: Owner
              data:
              - secretKey: AUTH0_DOMAIN
                remoteRef:
                  key: auth0/credentials
                  property: domain
              - secretKey: AUTH0_CLIENT_ID
                remoteRef:
                  key: auth0/credentials
                  property: clientId
              - secretKey: AUTH0_CLIENT_SECRET
                remoteRef:
                  key: auth0/credentials
                  property: clientSecret
              - secretKey: AUTH0_AUDIENCE
                remoteRef:
                  key: auth0/credentials
                  property: audience
        providerConfigRef:
          name: default
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.namespace
      toFieldPath: spec.forProvider.manifest.metadata.namespace
    - type: FromCompositeFieldPath
      fromFieldPath: spec.namespace
      toFieldPath: metadata.name
      transforms:
      - type: string
        string:
          fmt: "%s-auth0-externalsecret"
  - name: postgres-externalsecret
    base:
      apiVersion: kubernetes.crossplane.io/v1alpha1
      kind: Object
      spec:
        forProvider:
          manifest:
            apiVersion: external-secrets.io/v1beta1
            kind: ExternalSecret
            metadata:
              name: neon-postgres-credentials
            spec:
              refreshInterval: 1h
              secretStoreRef:
                kind: ClusterSecretStore
                name: aws-secretsmanager
              target:
                name: neon-postgres-credentials
                creationPolicy: Owner
              data:
              - secretKey: DB_URL
                remoteRef:
                  key: neon/postgres
                  property: url
              - secretKey: DB_USERNAME
                remoteRef:
                  key: neon/postgres
                  property: username
              - secretKey: DB_PASSWORD
                remoteRef:
                  key: neon/postgres
                  property: password
        providerConfigRef:
          name: default
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.namespace
      toFieldPath: spec.forProvider.manifest.metadata.namespace
    - type: FromCompositeFieldPath
      fromFieldPath: spec.namespace
      toFieldPath: metadata.name
      transforms:
      - type: string
        string:
          fmt: "%s-postgres-externalsecret"
  - name: redis-externalsecret
    base:
      apiVersion: kubernetes.crossplane.io/v1alpha1
      kind: Object
      spec:
        forProvider:
          manifest:
            apiVersion: external-secrets.io/v1beta1
            kind: ExternalSecret
            metadata:
              name: redis-credentials
            spec:
              refreshInterval: 1h
              secretStoreRef:
                kind: ClusterSecretStore
                name: aws-secretsmanager
              target:
                name: redis-credentials
                creationPolicy: Owner
              data:
              - secretKey: REDIS_HOST
                remoteRef:
                  key: redis/credentials
                  property: host
              - secretKey: REDIS_PORT
                remoteRef:
                  key: redis/credentials
                  property: port
              - secretKey: REDIS_PASSWORD
                remoteRef:
                  key: redis/credentials
                  property: password
        providerConfigRef:
          name: default
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.namespace
      toFieldPath: spec.forProvider.manifest.metadata.namespace
    - type: FromCompositeFieldPath
      fromFieldPath: spec.namespace
      toFieldPath: metadata.name
      transforms:
      - type: string
        string:
          fmt: "%s-redis-externalsecret"