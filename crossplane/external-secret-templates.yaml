# Auth0 External Secret Template
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: auth0-credentials
  namespace: default  # This will be templated for each vCluster namespace
spec:
  refreshInterval: 1h
  secretStoreRef:
    kind: ClusterSecretStore
    name: aws-secretsmanager
  target:
    name: auth0-credentials
    creationPolicy: Owner
  data:
  - secretKey: AUTH0_DOMAIN
    remoteRef:
      key: auth0/credentials
      property: domain
  - secretKey: AUTH0_CLIENT_ID
    remoteRef:
      key: auth0/credentials
      property: clientId
  - secretKey: AUTH0_CLIENT_SECRET
    remoteRef:
      key: auth0/credentials
      property: clientSecret
  - secretKey: AUTH0_AUDIENCE
    remoteRef:
      key: auth0/credentials
      property: audience

---
# Neon Postgres External Secret Template
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: neon-postgres-credentials
  namespace: default  # This will be templated for each vCluster namespace
spec:
  refreshInterval: 1h
  secretStoreRef:
    kind: ClusterSecretStore
    name: aws-secretsmanager
  target:
    name: neon-postgres-credentials
    creationPolicy: Owner
  data:
  - secretKey: DB_URL
    remoteRef:
      key: neon/postgres
      property: url
  - secretKey: DB_USERNAME
    remoteRef:
      key: neon/postgres
      property: username
  - secretKey: DB_PASSWORD
    remoteRef:
      key: neon/postgres
      property: password

---
# Redis External Secret Template
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: redis-credentials
  namespace: default  # This will be templated for each vCluster namespace
spec:
  refreshInterval: 1h
  secretStoreRef:
    kind: ClusterSecretStore
    name: aws-secretsmanager
  target:
    name: redis-credentials
    creationPolicy: Owner
  data:
  - secretKey: REDIS_HOST
    remoteRef:
      key: redis/credentials
      property: host
  - secretKey: REDIS_PORT
    remoteRef:
      key: redis/credentials
      property: port
  - secretKey: REDIS_PASSWORD
    remoteRef:
      key: redis/credentials
      property: password