apiVersion: batch/v1
kind: Job
metadata:
  name: test-argo-auth
  namespace: default
  labels:
    test: "argo-authentication"
spec:
  template:
    spec:
      serviceAccountName: argo-workflows-client
      restartPolicy: Never
      volumes:
        - name: argo-token
          secret:
            secretName: slack-api-argo-token-copy
      containers:
        - name: test-argo-auth
          image: curlimages/curl:latest
          command: ["/bin/sh", "-c"]
          volumeMounts:
            - name: argo-token
              mountPath: "/var/run/secrets/argo"
              readOnly: true
          args:
            - |
              echo "üîê Testing Argo server authentication..."
              echo "Token file exists: $(ls -la /var/run/secrets/argo/)"
              echo "Token content length: $(cat /var/run/secrets/argo/token | wc -c)"
              echo ""
              echo "üì° Testing Argo server connectivity with authentication..."
              RESPONSE=$(curl -s -k -w 'HTTPSTATUS:%{http_code}' -H "Authorization: Bearer $(cat /var/run/secrets/argo/token)" https://argo-server.argo.svc.cluster.local:2746/api/v1/info)
              HTTP_STATUS=$(echo $RESPONSE | tr -d '\n' | sed -e 's/.*HTTPSTATUS://')
              BODY=$(echo $RESPONSE | sed -e 's/HTTPSTATUS:.*//g')
              echo "üìä HTTP Status: $HTTP_STATUS"
              echo "üìÑ Response: $BODY"
              if [ "$HTTP_STATUS" -eq 200 ] || [ "$HTTP_STATUS" -eq 201 ]; then
                echo "‚úÖ Authentication successful!"
              else
                echo "‚ùå Authentication failed"
                exit 1
              fi
              echo ""
              echo "üîç Testing workflow listing..."
              RESPONSE=$(curl -s -k -w 'HTTPSTATUS:%{http_code}' -H "Authorization: Bearer $(cat /var/run/secrets/argo/token)" https://argo-server.argo.svc.cluster.local:2746/api/v1/workflows/argo)
              HTTP_STATUS=$(echo $RESPONSE | tr -d '\n' | sed -e 's/.*HTTPSTATUS://')
              echo "üìä Workflow list HTTP Status: $HTTP_STATUS"
              if [ "$HTTP_STATUS" -eq 200 ] || [ "$HTTP_STATUS" -eq 201 ]; then
                echo "‚úÖ Workflow API access successful!"
                echo "üéâ Argo authentication is working correctly!"
              else
                echo "‚ùå Workflow API access failed"
                exit 1
              fi